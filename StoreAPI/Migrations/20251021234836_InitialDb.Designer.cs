// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreAPI.Context;

#nullable disable

namespace StoreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251021234836_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StoreAPI.Entities.Authentication.ClientRole", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("ClientId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ClientRole");
                });

            modelBuilder.Entity("StoreAPI.Entities.Authentication.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hardware"
                        },
                        new
                        {
                            Id = 2,
                            Name = "PlayStation"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Smartphone"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Games"
                        });
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Client");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Expiration")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("MaxLimit")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<decimal?>("UsedLimit")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.0m);

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<int>("Installments")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "It is a video card with excellent cost-effectiveness, extremely efficient and capable of delivering better performance in games.",
                            ImageUrl = "assets/images/GraphicCard4070Ti.png",
                            Name = "RTX 4070 Ti",
                            Price = 7500m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "It is a video card with excellent cost-effectiveness, extremely efficient and capable of delivering better performance in games.",
                            ImageUrl = "assets/images/GraphicCard5090.png",
                            Name = "RTX 5090",
                            Price = 20999m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "The latest console from Sony, more efficient than previous generations, delivering maximum performance and excellent graphics.",
                            ImageUrl = "assets/images/PlayStation5.png",
                            Name = "PlayStation 5",
                            Price = 3299m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Console from Sony, more efficient than previous generations, delivering maximum performance and excellent graphics.",
                            ImageUrl = "assets/images/PlayStation4.png",
                            Name = "PlayStation 4",
                            Price = 2299m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "It is an excellent cost-effective cell phone, currently considered the best of today, with a 150mpx camera.",
                            ImageUrl = "assets/images/XiaomiRedmiNote13.png",
                            Name = "Redmi Note 13",
                            Price = 3599m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "It is an excellent cost-effective cell phone, currently considered the best of today, with a 150mpx camera.",
                            ImageUrl = "assets/images/Iphone14.png",
                            Name = "Iphone 14",
                            Price = 6500m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Description = "Can deliver fast performance of over 100 FPS in the world's most popular games, discrete graphics required",
                            ImageUrl = "assets/images/Processor5500.png",
                            Name = "AMD Ryzen 5 5500",
                            Price = 590m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Description = "The best processor for gamers meets the best processor for creators, with 16 cores and 32 processing lines",
                            ImageUrl = "assets/images/Processor5950X.png",
                            Name = "AMD Ryzen 9 5950X",
                            Price = 3999m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Description = "Can deliver ultra-fast 100 FPS performance in the world's most popular games, discrete graphics card required",
                            ImageUrl = "assets/images/Processor5700X.png",
                            Name = "AMD Ryzen 7 5700X",
                            Price = 1089m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Description = "Winner of over 300 Game of the Year awards, remastered for the PS5 console.",
                            ImageUrl = "assets/images/TheLastOfUs2.png",
                            Name = "The Last of Us",
                            Price = 220m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            Description = "Embark on an epic and heartbreaking journey where Kratos and Atreus struggle between the desire to stay together or separate.",
                            ImageUrl = "assets/images/GowRagnarok.png",
                            Name = "God of War",
                            Price = 220m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Description = "Sony's latest limited edition console, more efficient than previous generations, offering maximum performance and excellent graphics.",
                            ImageUrl = "assets/images/PlayStation5Edition.png",
                            Name = "PlayStation 5 Gold",
                            Price = 4899m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "All the Classics You Love, Plus 93 Thousand Titles!",
                            ImageUrl = "assets/images/ConsoleRetroPSX.png",
                            Name = "Console Retrô PSX",
                            Price = 2399m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            Description = "The Golden Order has been broken. Rise, Tarnished, and be guided by grace to wield the power of the Pristine Ring and become a Pristine Lord in the Lands Between.",
                            ImageUrl = "assets/images/EldenRing.png",
                            Name = "Elden Ring",
                            Price = 220m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Description = "Your PS5 in the palm of your hand with the PlayStation Portal Remote Player",
                            ImageUrl = "assets/images/PlayStationPortatil.png",
                            Name = "PlayStation Portátil",
                            Price = 4100m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            Description = "Resident Evil 4 is a remake of the original 2005 game. With revamped graphics, updated gameplay, and a reimagined storyline, while preserving the essence of the original game.Resident Evil 4 is a remake of the original 2005 game. With revamped graphics, updated gameplay, and a reimagined storyline, while preserving the essence of the original game.",
                            ImageUrl = "assets/images/ResidentEvil4.png",
                            Name = "Resident Evil 4",
                            Price = 220m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 4,
                            Description = "Experience the rise of Miles Morales as the hero who masters the new, amazing, and explosive powers to become Spider-Man himself",
                            ImageUrl = "assets/images/SpiderManMilesMorales.png",
                            Name = "Miles Morales",
                            Price = 220m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            Description = "50 MP main camera with AI and Automatic Night Vision",
                            ImageUrl = "assets/images/MotorolaG15.png",
                            Name = "Motorola G15",
                            Price = 889m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 3,
                            Description = "Multiple actions in a single voice command",
                            ImageUrl = "assets/images/SamsungGalaxyS25.png",
                            Name = "Samsung Galaxy S25",
                            Price = 3999m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 3,
                            Description = "Processing and screen to compete and win. New Mediatek Dimensity 8400-Ultra processor and 1.5 curved AMOLED screen with 120Hz, your new high-performance mobile gaming setup. Express your creativity and share your stories with quality.",
                            ImageUrl = "assets/images/XiaomiPocoX17.png",
                            Name = "Xiaomi Poco X17",
                            Price = 2199m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 1,
                            Description = "Equipped with the powerful 13th-generation Intel Core i7-13620H processor and the NVIDIA GeForce RTX 3050 graphics card, this laptop delivers the performance you need to tackle any challenge.",
                            ImageUrl = "assets/images/NotebookAcerNitro.png",
                            Name = "Notebook",
                            Price = 4599m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 1,
                            Description = "Wireless gaming mouse Attack Shark X11 white – lightweight, precision, and advanced connectivityThe Attack Shark X11 white is the ideal choice for those seeking professional performance combined with a lightweight and modern design.",
                            ImageUrl = "assets/images/MouseBranco.png",
                            Name = "Mouse Branco",
                            Price = 189m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 1,
                            Description = "If you are looking for an immersive experience for various types of games, such as strategy, FPS, and racing, this monitor is perfect for you.",
                            ImageUrl = "assets/images/MonitorUltraGear.png",
                            Name = "Monitor",
                            Price = 1459m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 1,
                            Description = "Experience a new dimension of audio with the Redragon Zeus X gaming headset. Its 53mm drivers deliver rich and powerful sound, with deep bass and crystal-clear highs. With 7.1 virtual surround sound, you will hear every detail of the game, from enemy footsteps to the most intense explosions.",
                            ImageUrl = "assets/images/HeadsetRedragon.png",
                            Name = "HeadsetRedragon",
                            Price = 199m,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("StoreAPI.Entities.Authentication.ClientRole", b =>
                {
                    b.HasOne("StoreAPI.Entities.Models.Client", "Client")
                        .WithMany("ClientRole")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreAPI.Entities.Authentication.Role", "Role")
                        .WithMany("ClientRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Address", b =>
                {
                    b.HasOne("StoreAPI.Entities.Models.Client", "Client")
                        .WithOne("Address")
                        .HasForeignKey("StoreAPI.Entities.Models.Address", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.CreditCard", b =>
                {
                    b.HasOne("StoreAPI.Entities.Models.Client", "Client")
                        .WithOne("CreditCard")
                        .HasForeignKey("StoreAPI.Entities.Models.CreditCard", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Order", b =>
                {
                    b.HasOne("StoreAPI.Entities.Models.Client", "Client")
                        .WithMany("Order")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.OrderItem", b =>
                {
                    b.HasOne("StoreAPI.Entities.Models.Order", "Order")
                        .WithMany("OrderItem")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreAPI.Entities.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Product", b =>
                {
                    b.HasOne("StoreAPI.Entities.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StoreAPI.Entities.Authentication.Role", b =>
                {
                    b.Navigation("ClientRole");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Category", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Client", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("ClientRole");

                    b.Navigation("CreditCard");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("StoreAPI.Entities.Models.Order", b =>
                {
                    b.Navigation("OrderItem");
                });
#pragma warning restore 612, 618
        }
    }
}
